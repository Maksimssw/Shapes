{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2EAA2E,WAAW;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iEAAe,MAAM;;;;;;UCzJrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNsC;AACtC;AACA;AACA,IAAI,2DAAM;AACV,CAAC,E","sources":["webpack:///./src/js/modules/shapes.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/js/script.js"],"sourcesContent":["const shapes = () => {\r\n    const shapesWrapper = document.querySelector('.shapes__wrapper');\r\n    const modal = document.querySelector('.modal');\r\n\r\n    // Создание блоков и добавление в обёртку\r\n    for(let i = 0; i < 16; i++){\r\n        const el = document.createElement('div');\r\n        const block = document.createElement('div');\r\n       \r\n        block.classList.add('shapes__list');\r\n        el.classList.add('shapes_close');\r\n\r\n        block.appendChild(el);\r\n        shapesWrapper.appendChild(block);\r\n    }\r\n\r\n    const blocksList = document.querySelectorAll('.shapes__list');\r\n\r\n    // Рандомные числа от 1 до 16\r\n    const arrNum = _.shuffle(_.range(1,17)).slice(0,16);\r\n\r\n    // Добавление атрибутов рандомных чисел \r\n    arrNum.forEach((el, i) => blocksList[i].setAttribute('data-num', el));\r\n\r\n    // Добавление фигур \r\n    blocksList.forEach(el => {\r\n        const numList = +el.getAttribute('data-num');\r\n\r\n        if(numList <= 4){\r\n            el.classList.add('shapes_circle');\r\n            el.setAttribute('data-figure', 'circle');\r\n        } else if (numList >= 5 && numList <= 8){\r\n            el.classList.add('shapes_box');\r\n            el.setAttribute('data-figure', 'box');\r\n        } else if(numList >= 9 && numList <= 12){\r\n            el.classList.add('shapes_triangle');\r\n            el.setAttribute('data-figure', 'triangle');\r\n        } else{\r\n            el.classList.add('shapes_rhomb');\r\n            el.setAttribute('data-figure', 'rhomb');\r\n        }\r\n    })\r\n\r\n    // Удаление всех активных классов и закрытие фигур\r\n    function deletingAllActiveClass(){\r\n        blocksList.forEach(item => {\r\n            item.classList.remove('shapes_active');\r\n            item.querySelector('div').classList.add('shapes_close')\r\n        });\r\n    }\r\n\r\n    // Открытие фигур \r\n    function openingShapes(figures, block){\r\n        block.classList.remove('shapes_close');\r\n\r\n        figures.forEach(el => {\r\n            const block = el.querySelector('div');\r\n            block.style.opacity = 1;\r\n            block.classList.add('shapes_collect')\r\n        })\r\n    }\r\n\r\n    // Cчетчик количества одинаковых фигур\r\n    function counterNumberShapes(figures){\r\n        let res = 0;\r\n\r\n        figures.forEach(el => {\r\n            const block = el.querySelector('div');\r\n\r\n            if(block.classList.contains('shapes_close')){}else{\r\n                res += 1;\r\n            }\r\n        })\r\n\r\n        return res;\r\n    }\r\n\r\n    // Добавление в массив фигуру\r\n    function addShapeArr(el, figureAttr, block){\r\n        el.classList.add('shapes_active');\r\n        block.classList.remove('shapes_close');\r\n        arr.push(figureAttr);\r\n    }\r\n\r\n    // Перебор фигур\r\n    function bustingShapes(block, figureAttr, el){\r\n        arr.forEach(item => {\r\n    \r\n            if(item === figureAttr){\r\n                arr.push(figureAttr);\r\n                block.classList.remove('shapes_close');\r\n                el.classList.add('shapes_active');\r\n            }else if(arr.length === 4){\r\n                block.classList.remove('shapes_close');\r\n                arr.splice(0,16);\r\n\r\n                setTimeout(() => {\r\n\r\n                    deletingAllActiveClass();\r\n\r\n                }, 300);\r\n            } else {\r\n                block.classList.remove('shapes_close');\r\n                arr.splice(0,16);\r\n            \r\n                setTimeout(() => {\r\n\r\n                    block.classList.add('shapes_close');\r\n\r\n                    deletingAllActiveClass();\r\n                }, 300);\r\n            }\r\n        })\r\n    }\r\n\r\n    // Проверка все ли фигуры открыты\r\n    function checkingShapes(){\r\n        const blocks = document.querySelectorAll('.shapes_collect');\r\n    \r\n        if(blocks.length === 16){\r\n            modal.classList.add('modal_active');\r\n        }\r\n    }\r\n\r\n    const arr = [];\r\n\r\n    blocksList.forEach(el => {\r\n        el.addEventListener('click', function(e){\r\n\r\n            // Получение имени фигуры и дочерний блок\r\n            const figureAttr = el.getAttribute('data-figure');\r\n            const block = el.querySelector('div');\r\n\r\n            if(el.classList.contains('shapes_active')){\r\n            }else{  \r\n\r\n                const figures = document.querySelectorAll(`[data-figure=\"${figureAttr}\"]`)\r\n\r\n                let res = counterNumberShapes(figures);\r\n\r\n                if(res < 3){\r\n                    if(arr.length === 0){\r\n                        addShapeArr(el, figureAttr, block);\r\n                    } else bustingShapes(block, figureAttr, el);\r\n                } else openingShapes(figures, block);\r\n            }\r\n\r\n            checkingShapes();\r\n        });\r\n    })\r\n\r\n}\r\n\r\nexport default shapes;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import shapes from './modules/shapes';\r\n\r\ndocument.addEventListener('DOMContentLoaded', function(){\r\n    shapes();\r\n});"],"names":[],"sourceRoot":""}